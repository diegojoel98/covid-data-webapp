{"version":3,"sources":["components/topContent/TopContent.js","components/mainContent/MainContent.js","components/bottomContent/BottomContent.js","components/Home/Home.js","components/navbar/Navbar.js","components/footer/Footer.js","components/mainContent/MainContentRegion.js","components/error404/Error404.js","App.js","reportWebVitals.js","index.js"],"names":["TopContent","useState","confirmed","deaths","lastUpdate","dataCovid","setDataCovid","loading","setLoading","useEffect","fetch","then","res","ok","json","data","value","catch","err","console","error","finally","className","role","id","MainContent","dataCountry","setDataCountry","countryISO","country","setCountry","allCountries","setCountries","countries","toString","defaultValue","onChange","e","target","split","disabled","map","i","undefined","iso3","name","to","BottomContent","home","window","location","href","includes","todayDate","Date","now","today","getMonth","getDate","getFullYear","yesterdayDate","yesterday","weekAgoDate","weekAgo","monthAgoDate","monthAgo","yearAgoDate","yearAgo","daily","setDaily","dailyData","setDailyData","toDateString","region","combinedKey","title","parseFloat","incidentRate","toFixed","caseFatalityRatio","Home","Navbar","style","backgroundColor","type","Footer","source","setData","rel","MainContentRegion","useParams","province","setProvince","width","provinceState","active","cases28Days","deaths28Days","Error404","height","marginTop","App","path","exact","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAGe,SAASA,IAEpB,MAAkCC,mBAAS,CAAEC,UAAW,EAAGC,OAAQ,EAAGC,WAAY,KAAlF,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KAuBA,OApBAC,qBAAU,WACNC,MAAM,kCACDC,MAAK,SAAAC,GACF,GAAIA,EAAIC,GACJ,OAAOD,EAAIE,OAEf,MAAMF,KAETD,MAAK,SAAAI,GACFT,EAAa,CAAEJ,UAAWa,EAAKb,UAAUc,MAAOb,OAAQY,EAAKZ,OAAOa,MAAOZ,WAAYW,EAAKX,gBAE/Fa,OAAM,SAAAC,GACHC,QAAQC,MAAM,4BAA6BF,MAE9CG,SAAQ,WACLb,GAAW,QAEpB,IAGCD,EAEI,qBAAKe,UAAU,mCAAmCC,KAAK,SAAvD,SACI,sBAAMD,UAAU,UAAhB,0BAMR,sBAAKA,UAAU,MAAME,GAAG,cAAxB,UACI,oBAAIF,UAAU,qBAAd,mCACA,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,4CACA,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,WAEnB,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,WAEnB,sBAAKA,UAAU,gBAAf,cAAiCjB,EAAUH,UAA3C,eAIZ,sBAAKoB,UAAU,gBAAf,UACI,yCACA,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,oBAEnB,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,oBAEnB,sBAAKA,UAAU,kCAAf,cAAmDjB,EAAUF,OAA7D,kBAKhB,oBAAGmB,UAAU,uBAAb,0BAAkDjB,EAAUD,oB,KCnE7D,SAASqB,IAEpB,MAAsCxB,mBAAS,CAAEC,UAAW,EAAGC,OAAQ,EAAGC,WAAY,KAAtF,mBAAOsB,EAAP,KAAoBC,EAApB,KACA,EAA8B1B,mBAAS,CAAE2B,WAAY,KAAMC,QAAS,WAApE,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAqC7B,mBAAS,IAA9C,mBAAO8B,EAAP,KAAqBC,EAArB,KACA,EAA8B/B,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KA6CA,GA1CAC,qBAAU,WACNC,MAAM,6CACDC,MAAK,SAAAC,GACF,GAAIA,EAAIC,GACJ,OAAOD,EAAIE,OAEf,MAAMF,KAETD,MAAK,SAAAI,GAEFiB,EAAajB,EAAKkB,cAErBhB,OAAM,SAAAC,GACHC,QAAQC,MAAM,iCAAkCF,MAEnDG,SAAQ,WACLb,GAAW,QAEpB,IAGHC,qBAAU,WACNC,MAAM,4CAA8CmB,EAAQD,YACvDjB,MAAK,SAAAC,GACF,GAAIA,EAAIC,GACJ,OAAOD,EAAIE,OAEf,MAAMF,KAETD,MAAK,SAAAI,GAEFY,EAAe,CAAEzB,UAAWa,EAAKb,UAAUc,MAAOb,OAAQY,EAAKZ,OAAOa,MAAOZ,WAAYW,EAAKX,WAAW8B,gBAE5GjB,OAAM,SAAAC,GACHC,QAAQC,MAAM,oCAAqCF,MAEtDG,SAAQ,WACLb,GAAW,QAEpB,CAACqB,IAGAtB,EACA,OACI,qBAAKe,UAAU,6BAA6BC,KAAK,SAAjD,SACI,sBAAMD,UAAU,UAAhB,0BAYZ,OACI,sBAAKA,UAAU,MAAME,GAAG,gBAAxB,UACI,uBACA,8CAAiBK,EAAQA,WACzB,yBAAQP,UAAU,eAAea,aAAc,UAAWC,SAXlE,SAAuBC,GAGnB,IAAIR,EAAUQ,EAAEC,OAAOtB,MAAMuB,MAAM,KACnCT,EAAW,CAAEF,WAAYC,EAAQ,GAAIA,QAASA,EAAQ,MAOlD,UACI,wBAAQW,UAAQ,EAACxB,MAAM,UAAvB,4BAEIe,EAAaU,KAAI,SAACZ,EAASa,GACvB,QAAqBC,IAAjBd,EAAQe,KACR,OAAO,yBAA0B5B,MAAOa,EAAQe,KAAO,IAAMf,EAAQgB,KAA9D,cAAsEhB,EAAQgB,KAA9E,MAAaH,EAAIb,SAKxC,qBAAKP,UAAU,iBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,oBAAGA,UAAU,oBAAb,cAAkC,mBAAGA,UAAU,2BAA/C,eAAyFI,EAAYxB,eAEzG,qBAAKoB,UAAU,WAAf,SACI,oBAAGA,UAAU,oBAAb,cAAkC,mBAAGA,UAAU,+BAA/C,YAA0FI,EAAYvB,iBAIlH,cAAC,IAAD,CAAM2C,GAAE,WAAMjB,EAAQD,WAAd,WAAR,SACI,yBAAQN,UAAU,uBAAlB,6BAA0DO,EAAQA,aAEtE,oBAAGP,UAAU,uBAAb,0BAAkDI,EAAYtB,iB,MC5F3D,SAAS2C,IAGpB,IAAIC,GAAO,EACPC,OAAOC,SAASC,KAAKC,SAAS,iBAC9BJ,GAAO,GAIX,IAAIK,EAAY,IAAIC,KAAKA,KAAKC,MAAQ,OAClCC,EAAQH,EAAUI,WAAa,EAAI,IAAMJ,EAAUK,UAAY,IAAML,EAAUM,cAC/EC,EAAgB,IAAIN,KAAKA,KAAKC,MAAS,QACvCM,EAAYD,EAAcH,WAAa,EAAI,IAAMG,EAAcF,UAAY,IAAME,EAAcD,cAE/FG,EAAc,IAAIR,KAAKA,KAAKC,MAAS,QACrCQ,EAAUD,EAAYL,WAAa,EAAI,IAAMK,EAAYJ,UAAY,IAAMI,EAAYH,cAEvFK,EAAe,IAAIV,KAAKA,KAAKC,MAAS,QACtCU,EAAWD,EAAaP,WAAa,EAAI,IAAMO,EAAaN,UAAY,IAAMM,EAAaL,cAE3FO,EAAc,IAAIZ,KAAKA,KAAKC,MAAS,SACrCY,EAAUD,EAAYT,WAAa,EAAI,IAAMS,EAAYR,UAAY,IAAMQ,EAAYP,cAI3F,EAA0B1D,mBAAS,CAAEmE,MAAOZ,IAA5C,mBAAOY,EAAP,KAAcC,EAAd,KACA,EAAkCpE,mBAAS,CAAEc,KAAM,KAAnD,mBAAOuD,EAAP,KAAkBC,EAAlB,KACA,EAA8BtE,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KAwBA,GArBAC,qBAAU,WACNC,MAAM,wCAA0C0D,EAAMA,OACjDzD,MAAK,SAAAC,GACF,GAAIA,EAAIC,GACJ,OAAOD,EAAIE,OAEf,MAAMF,KAETD,MAAK,SAAAI,GAEFwD,EAAa,CAAExD,KAAMA,OAExBE,OAAM,SAAAC,GACHC,QAAQC,MAAM,8BAA+BF,MAEhDG,SAAQ,WACLb,GAAW,QAEpB,CAAC4D,IAGA7D,EACA,OACI,sBAAKe,UAAU,OAAf,UACI,qBAAKA,UAAU,8BAA8BC,KAAK,SAAlD,SACI,sBAAMD,UAAU,UAAhB,0BAEJ,2EAUZ,OACI,sBAAKA,UAAU,MAAME,GAAG,gBAAxB,UACI,uBACA,+CACA,8BAAG,mBAAGF,UAAU,wBAAhB,YAAmD,IAAIgC,MAAOkB,kBAC9D,yBAAQrC,aAAc,UAAWb,UAAU,+BAA+Bc,SAVlF,SAAoBC,GAEhBgC,EAAS,CAAED,MAAO/B,EAAEC,OAAOtB,SAQvB,UACI,wBAAQwB,UAAQ,EAACxB,MAAM,UAAvB,yBACA,wBAAQA,MAAOwC,EAAf,mBACA,wBAAQxC,MAAO6C,EAAf,uBACA,yBAAQ7C,MAAO+C,EAAf,0BAAsCA,KACtC,yBAAQ/C,MAAOiD,EAAf,2BAAwCA,KACxC,yBAAQjD,MAAOmD,EAAf,0BAAsCA,QAE1C,sBAAK7C,UAAU,uBAAf,UACI,qBAAKA,UAAU,MAAf,SAEQgD,EAAUvD,KAAK0B,KAAI,SAACgC,EAAQ/B,GACxB,OAAIM,GAAQN,EAAI,EAER,qBAAKpB,UAAU,6BAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAGA,UAAU,cAAb,sBAAoC,4BAAImD,EAAOC,iBAC/C,oBAAGpD,UAAU,gBAAb,yBAA0CmD,EAAOvE,aACjD,oBAAGoB,UAAU,gBAAb,sBAAuCmD,EAAOtE,UAC9C,oBAAGmB,UAAU,gBAAgBqD,MAAM,+IAAnC,6BAAmMC,WAAWH,EAAOI,cAAcC,QAAQ,MAC3O,oBAAGxD,UAAU,gBAAgBqD,MAAM,6DAAnC,mCAAuHC,WAAWH,EAAOM,mBAAmBD,QAAQ,MACpK,oBAAGxD,UAAU,uBAAb,2BAAmDmD,EAAOrE,kBAPjBsC,EAAI+B,EAAOC,aAY/D1B,OAAL,EAEQ,qBAAK1B,UAAU,6BAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAGA,UAAU,cAAb,sBAAoC,4BAAImD,EAAOC,iBAC/C,oBAAGpD,UAAU,gBAAb,yBAA0CmD,EAAOvE,aACjD,oBAAGoB,UAAU,gBAAb,sBAAuCmD,EAAOtE,UAC9C,oBAAGmB,UAAU,gBAAgBqD,MAAM,+IAAnC,6BAAmMC,WAAWH,EAAOI,cAAcC,QAAQ,MAC3O,oBAAGxD,UAAU,gBAAgBqD,MAAM,6DAAnC,mCAAuHC,WAAWH,EAAOM,mBAAmBD,QAAQ,MACpK,oBAAGxD,UAAU,uBAAb,2BAAmDmD,EAAOrE,kBAPjBsC,EAAI+B,EAAOC,kBAehF,cAAC,IAAD,CAAM5B,GAAG,6BAAT,SAAsC,wBAAQxB,UAAU,uBAAlB,sCCnHvC,SAAS0D,IACpB,OACI,gCACI,cAAChF,EAAD,IACA,cAACyB,EAAD,IACA,cAACsB,EAAD,O,MCJG,SAASkC,IAEpB,OACI,sBAAK3D,UAAU,uCAAuC4D,MAAO,CAAEC,gBAAiB,WAAhF,UACI,eAAC,IAAD,CAAMrC,GAAG,qBAAqBxB,UAAU,eAAxC,+BAAyE,mBAAGA,UAAU,oBACtF,wBAAQA,UAAU,iBAAiB8D,KAAK,SAAS,cAAY,WAAW,cAAY,aAAa,gBAAc,YAAY,gBAAc,QAAQ,aAAW,oBAA5J,SACI,sBAAM9D,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BE,GAAG,YAA7C,SACI,qBAAIF,UAAU,aAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,eAAC,IAAD,CAAMwB,GAAG,qBAAqBxB,UAAU,WAAxC,kBAAwD,sBAAMA,UAAU,UAAhB,4BAE5D,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMwB,GAAG,iCAAiCxB,UAAU,WAApD,kCAEJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMwB,GAAG,mCAAmCxB,UAAU,WAAtD,qCCpBT,SAAS+D,IAGpB,MAAwBpF,mBAAS,CAAEqF,OAAQ,GAAIlF,WAAY,KAA3D,mBAAOW,EAAP,KAAawE,EAAb,KAkBA,OAhBA9E,qBAAU,WACNC,MAAM,kCACDC,MAAK,SAAAC,GACF,GAAIA,EAAIC,GACJ,OAAOD,EAAIE,OAEf,MAAMF,KAETD,MAAK,SAAAI,GACFwE,EAAQ,CAAED,OAAQvE,EAAKuE,OAAQlF,WAAYW,EAAKX,gBAEnDa,OAAM,SAAAC,GACHC,QAAQC,MAAM,+BAAgCF,QAEvD,IAGC,qBAAKI,UAAU,sBAAsB4D,MAAO,CAAEC,gBAAiB,WAA/D,SACI,sBAAK7D,UAAU,MAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,oBADjB,IACwC,6CADxC,IAC4D,mBAAGA,UAAU,YAAY6B,KAAMpC,EAAKuE,OAAQhD,OAAO,SAASkD,IAAI,aAAhE,SAA8EzE,EAAKuE,YAE/I,sBAAKhE,UAAU,kBAAf,UACI,mBAAGA,UAAU,wBADjB,IAC4C,6CAD5C,+BAGA,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,kBADjB,IACsC,6CADtC,IAC2DP,EAAKX,mBC7BjE,SAASqF,IAEpB,IAAQhB,EAAWiB,cAAXjB,OAER,EAAgCxE,mBAAS,IAAzC,mBAAO0F,EAAP,KAAiBC,EAAjB,KACA,EAA8B3F,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KAwBA,OArBAC,qBAAU,WACNC,MAAM,4CAA8C+D,EAAS,cACxD9D,MAAK,SAAAC,GACF,GAAIA,EAAIC,GACJ,OAAOD,EAAIE,OAEf,MAAMF,KAETD,MAAK,SAAAI,GAEF6E,EAAY7E,MAEfE,OAAM,SAAAC,GACHC,QAAQC,MAAM,qCAAsCF,MAEvDG,SAAQ,WACLb,GAAW,QAEpB,IAGCD,EAEI,qBAAKe,UAAU,6BAA6BC,KAAK,SAAjD,SACI,sBAAMD,UAAU,UAAhB,0BAMR,sBAAKA,UAAU,MAAME,GAAG,gBAAxB,UACI,8CAAiBiD,KACjB,qBAAKnD,UAAU,iBAAf,SACI,qBAAKA,UAAU,MAAf,SAEQqE,EAASlD,KAAI,SAACkD,EAAUjD,GACpB,OACI,qBAAKpB,UAAU,gCAAf,SACI,qBAAKA,UAAU,OAAO4D,MAAO,CAAEW,MAAO,SAAtC,SACI,sBAAKvE,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BqE,EAASG,gBACrC,qBAAIxE,UAAU,+BAAd,UAA6C,mBAAGA,UAAU,gCAA1D,WAAqGqE,EAASI,UAC9G,qBAAIzE,UAAU,+BAAd,UAA6C,mBAAGA,UAAU,+BAA1D,eAAwGqE,EAASzF,aACjH,qBAAIoB,UAAU,+BAAd,UAA6C,mBAAGA,UAAU,sBAA1D,YAA4FqE,EAASxF,UACrG,qBAAImB,UAAU,+BAAd,UAA6C,mBAAGA,UAAU,6BAA1D,wBAA+GqE,EAASK,eACxH,qBAAI1E,UAAU,+BAAd,UAA6C,mBAAGA,UAAU,+BAA1D,yBAAkHqE,EAASM,gBAC3H,qBAAI3E,UAAU,+BAAd,UAA6C,mBAAGA,UAAU,2BAA1D,mBAAwGsD,WAAWe,EAASd,cAAcC,QAAQ,YAT1GpC,EAAIiD,aC/CzE,SAASO,IACpB,OACI,qBAAK5E,UAAU,YAAY4D,MAAO,CAAEiB,OAAQ,QAA5C,SACI,qBAAK7E,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAY4D,MAAO,CAAEkB,UAAW,QAA/C,UACI,+DACA,6FACA,wDAA0B,eAAC,IAAD,CAAMtD,GAAG,qBAAT,cAA+B,sCAA/B,OAA1B,oCCiBLuD,MAjBf,WACE,OACE,sBAAK/E,UAAU,MAAf,UACE,cAAC2D,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqB,KAAK,qBAAqBC,OAAK,EAACC,QAAS,cAACxB,EAAD,MAChD,cAAC,IAAD,CAAOsB,KAAK,oCAAoCE,QAAS,cAACf,EAAD,MACzD,cAAC,IAAD,CAAOa,KAAK,+CAA+CE,QAAS,cAACzD,EAAD,MACpE,cAAC,IAAD,CAAOuD,KAAK,IAAIE,QAAS,cAACN,EAAD,SAG3B,cAACb,EAAD,QCTSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhG,MAAK,YAAkD,IAA/CiG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0ac1484b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './topContent.css';\r\n\r\nexport default function TopContent() {\r\n    // useState, dataCovid and variable loading\r\n    const [dataCovid, setDataCovid] = useState({ confirmed: 0, deaths: 0, lastUpdate: '' });\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // fetching data\r\n    useEffect(() => {\r\n        fetch(\"https://covid19.mathdro.id/api\")\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json()\r\n                }\r\n                throw res;\r\n            })\r\n            .then(data => {\r\n                setDataCovid({ confirmed: data.confirmed.value, deaths: data.deaths.value, lastUpdate: data.lastUpdate });\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching the data: \", err);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    // end fetching\r\n    if (loading) {\r\n        return (\r\n            <div className=\"spinner-border text-primary mt-2\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='m-2' id='covid-world'>\r\n            <h1 className=\"title-section mt-3\">Covid-19 in the World</h1>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-2\">\r\n                        <p>Confirmed: </p>\r\n                        <div className=\"circle-wrap\">\r\n                            <div className=\"circle\">\r\n                                <div className=\"mask full\">\r\n                                    <div className=\"fill\"></div>\r\n                                </div>\r\n                                <div className=\"mask half\">\r\n                                    <div className=\"fill\"></div>\r\n                                </div>\r\n                                <div className=\"inside-circle\"> {dataCovid.confirmed} </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-2\">\r\n                        <p>Deaths: </p>\r\n                        <div className=\"circle-wrap\">\r\n                            <div className=\"circle\">\r\n                                <div className=\"mask mask-red full\">\r\n                                    <div className=\"fill fill-red\"></div>\r\n                                </div>\r\n                                <div className=\"mask mask-red half\">\r\n                                    <div className=\"fill fill-red\"></div>\r\n                                </div>\r\n                                <div className=\"inside-circle inside-circle-red\"> {dataCovid.deaths} </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p className='text-muted text-left'>Last Update: {dataCovid.lastUpdate}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './mainContent.css';\r\n\r\nexport default function MainContent() {\r\n    // useState dataCountry, all countries, specific country and variable loading\r\n    const [dataCountry, setDataCountry] = useState({ confirmed: 0, deaths: 0, lastUpdate: '' });\r\n    const [country, setCountry] = useState({ countryISO: 'MX', country: 'Mexico' });\r\n    const [allCountries, setCountries] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // fetching countries\r\n    useEffect(() => {\r\n        fetch(\"https://covid19.mathdro.id/api/countries/\")\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                throw res;\r\n            })\r\n            .then(data => {\r\n                //console.log(\"data Countries: \", data.countries);\r\n                setCountries(data.countries);\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching the countries: \", err);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n    }, []);\r\n\r\n    // fetching data\r\n    useEffect(() => {\r\n        fetch(\"https://covid19.mathdro.id/api/countries/\" + country.countryISO)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                throw res;\r\n            })\r\n            .then(data => {\r\n                //console.log(data);\r\n                setDataCountry({ confirmed: data.confirmed.value, deaths: data.deaths.value, lastUpdate: data.lastUpdate.toString() })\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching the country data: \", err);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n    }, [country]);\r\n\r\n    // end fetching data\r\n    if (loading) {\r\n        return (\r\n            <div className=\"spinner-border text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function updateCountry(e) {\r\n        //alert(e.target.value);        \r\n        //console.log(e.target.value.split(' '));\r\n        let country = e.target.value.split('*');\r\n        setCountry({ countryISO: country[0], country: country[1] });\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-3\" id='covid-country'>\r\n            <hr />\r\n            <h2>Covid-19 in {country.country}</h2>\r\n            <select className=\"form-control\" defaultValue={'DEFAULT'} onChange={updateCountry}>\r\n                <option disabled value=\"DEFAULT\" >Select country</option>\r\n                {\r\n                    allCountries.map((country, i) => {\r\n                        if (country.iso3 !== undefined) {\r\n                            return <option key={i + country} value={country.iso3 + '*' + country.name}> {country.name} </option>\r\n                        }\r\n                    })\r\n                }\r\n            </select>\r\n            <div className='container mt-3'>\r\n                <div className='row'>\r\n                    <div className='col-md-6'>\r\n                        <p className='item-main-content'> <i className=\"fas fa-user-times mr-2\"></i> Confirmed: {dataCountry.confirmed}</p>\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                        <p className='item-main-content'> <i className=\"fas fa-clinic-medical mr-2\"></i> Deaths: {dataCountry.deaths}</p></div>\r\n                </div>\r\n            </div>\r\n\r\n            <Link to={`/${country.countryISO}/region`}>\r\n                <button className='btn btn-success mb-3'>View regions in {country.country}</button>\r\n            </Link>\r\n            <p className='text-left text-muted'>Last Update: {dataCountry.lastUpdate}</p>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './bottomContent.css';\r\n\r\nexport default function BottomContent() {\r\n\r\n    // check for url\r\n    let home = true;\r\n    if (window.location.href.includes(\"all-regions\")) {\r\n        home = false;\r\n    }\r\n\r\n    // date variables\r\n    let todayDate = new Date(Date.now() - 86400000); // 1 day - 1000 * 60 * 60 * 24\r\n    let today = todayDate.getMonth() + 1 + '-' + todayDate.getDate() + '-' + todayDate.getFullYear();\r\n    let yesterdayDate = new Date(Date.now() - (86400000 * 2)); // 2 day - 1000 * 60 * 60 * 24\r\n    let yesterday = yesterdayDate.getMonth() + 1 + '-' + yesterdayDate.getDate() + '-' + yesterdayDate.getFullYear();\r\n    //console.log(\"yest \", yesterday);\r\n    let weekAgoDate = new Date(Date.now() - (86400000 * 7)); // 7 days\r\n    let weekAgo = weekAgoDate.getMonth() + 1 + '-' + weekAgoDate.getDate() + '-' + weekAgoDate.getFullYear();\r\n    //console.log(\"week\", weekAgo);\r\n    let monthAgoDate = new Date(Date.now() - (86400000 * 30)); // 1 month\r\n    let monthAgo = monthAgoDate.getMonth() + 1 + '-' + monthAgoDate.getDate() + '-' + monthAgoDate.getFullYear();\r\n    //console.log(\"month\", monthAgo);\r\n    let yearAgoDate = new Date(Date.now() - (86400000 * 365)); // 1 year\r\n    let yearAgo = yearAgoDate.getMonth() + 1 + '-' + yearAgoDate.getDate() + '-' + yearAgoDate.getFullYear();\r\n    //console.log(\"year\", yearAgo);\r\n\r\n    // state\r\n    const [daily, setDaily] = useState({ daily: today });\r\n    const [dailyData, setDailyData] = useState({ data: [] });\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // fetching daily data\r\n    useEffect(() => {\r\n        fetch(\"https://covid19.mathdro.id/api/daily/\" + daily.daily)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                throw res;\r\n            })\r\n            .then(data => {\r\n                //console.log(data);\r\n                setDailyData({ data: data });\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching daily data: \", err);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n    }, [daily]);\r\n\r\n    // end fetching daily data\r\n    if (loading) {\r\n        return (\r\n            <div className='mt-2'>\r\n                <div className=\"spinner-border text-success\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <p>There are a lot of regions 😅</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function updateDate(e) {\r\n        //alert(e.target.value);\r\n        setDaily({ daily: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-3\" id='daily-summary'>\r\n            <hr />\r\n            <h2>Daily Summary</h2>\r\n            <p><i className=\"far fa-calendar-alt\"></i> Today: {new Date().toDateString()}</p>\r\n            <select defaultValue={'DEFAULT'} className=\"form-control form-control-sm\" onChange={updateDate}>\r\n                <option disabled value=\"DEFAULT\" >Select date</option>\r\n                <option value={today}>Today</option>\r\n                <option value={yesterday}>Yesterday</option>\r\n                <option value={weekAgo}>A week ago / {weekAgo}</option>\r\n                <option value={monthAgo}>A month ago / {monthAgo}</option>\r\n                <option value={yearAgo}>A year ago / {yearAgo}</option>\r\n            </select>\r\n            <div className='container-fluid mt-3'>\r\n                <div className='row'>\r\n                    {\r\n                        dailyData.data.map((region, i) => {\r\n                            if (home && i < 6) {\r\n                                return (\r\n                                    <div className='col-sm-6 col-md-3 col-lg-4' key={i + region.combinedKey}>\r\n                                        <div className=\"card mb-3\">\r\n                                            <p className=\"text-center\"> Region: <b>{region.combinedKey}</b></p>\r\n                                            <p className=\"text-left p-2\"> Confirmed: {region.confirmed}</p>\r\n                                            <p className=\"text-left p-2\"> Deaths: {region.deaths}</p>\r\n                                            <p className=\"text-left p-2\" title=\"Is determined by taking the total number of new cases of an event and dividing that by the sum of the person-time of the at-risk population.\"> Incident Rate: {parseFloat(region.incidentRate).toFixed(2)}</p>\r\n                                            <p className=\"text-left p-2\" title=\"Is the ratio between confirmed deaths and confirmed cases.\"> Case Fatality Ratio: {parseFloat(region.caseFatalityRatio).toFixed(2)}</p>\r\n                                            <p className=\"text-left text-muted\"> Last Update: {region.lastUpdate}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            if (!home) {\r\n                                return (\r\n                                    <div className='col-sm-6 col-md-3 col-lg-4' key={i + region.combinedKey}>\r\n                                        <div className=\"card mb-3\">\r\n                                            <p className=\"text-center\"> Region: <b>{region.combinedKey}</b></p>\r\n                                            <p className=\"text-left p-2\"> Confirmed: {region.confirmed}</p>\r\n                                            <p className=\"text-left p-2\"> Deaths: {region.deaths}</p>\r\n                                            <p className=\"text-left p-2\" title=\"Is determined by taking the total number of new cases of an event and dividing that by the sum of the person-time of the at-risk population.\"> Incident Rate: {parseFloat(region.incidentRate).toFixed(2)}</p>\r\n                                            <p className=\"text-left p-2\" title=\"Is the ratio between confirmed deaths and confirmed cases.\"> Case Fatality Ratio: {parseFloat(region.caseFatalityRatio).toFixed(2)}</p>\r\n                                            <p className=\"text-left text-muted\"> Last Update: {region.lastUpdate}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n                <Link to=\"/daily-summary-all-regions\"><button className='btn btn-success mb-3'>View all regions</button></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import TopContent from '../topContent/TopContent';\r\nimport MainContent from '../mainContent/MainContent';\r\nimport BottomContent from '../bottomContent/BottomContent';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <TopContent />\r\n            <MainContent />\r\n            <BottomContent />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './navbar.css';\r\n\r\n// Bootstrap navbar\r\nexport default function Navbar() {\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light\" style={{ backgroundColor: \"#C8E6C9\" }}>\r\n            <Link to=\"/covid-data-webapp\" className='navbar-brand'> Covid-19 Webapp  <i className=\"fas fa-virus\"></i></Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link to=\"/covid-data-webapp\" className='nav-link'>Home <span className=\"sr-only\">(current)</span></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/covid-data-webapp#covid-world\" className='nav-link'>Covid in the World</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/covid-data-webapp#daily-summary\" className='nav-link'>Daily Summary</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nexport default function Footer() {\r\n\r\n    // state\r\n    const [data, setData] = useState({ source: '', lastUpdate: '' });\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://covid19.mathdro.id/api\")\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                throw res;\r\n            })\r\n            .then(data => {\r\n                setData({ source: data.source, lastUpdate: data.lastUpdate });\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching source data: \", err);\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container-fluid p-3\" style={{ backgroundColor: \"#C8E6C9\" }}>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-4\">\r\n                    <i className=\"fas fa-database\"></i> <b>Data source:</b> <a className='text-dark' href={data.source} target=\"_blank\" rel=\"noreferrer\">{data.source}</a>\r\n                </div>\r\n                <div className=\"col-12 col-md-4\">\r\n                    <i className=\"fas fa-address-book\"></i> <b>Contact me: </b> dgongoragamboa@gmail.com\r\n                </div>\r\n                <div className=\"col-12 col-md-4\">\r\n                    <i className=\"fas fa-wrench\"></i> <b>Last Update:</b> {data.lastUpdate}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './mainContent.css';\r\n\r\nexport default function MainContentRegion() {\r\n\r\n    const { region } = useParams();\r\n\r\n    const [province, setProvince] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // fetching data\r\n    useEffect(() => {\r\n        fetch(\"https://covid19.mathdro.id/api/countries/\" + region + \"/confirmed\")\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                throw res;\r\n            })\r\n            .then(data => {\r\n                //console.log(data);\r\n                setProvince(data)\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching the province data: \", err);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n    }, []);\r\n\r\n    // end fetching data\r\n    if (loading) {\r\n        return (\r\n            <div className=\"spinner-border text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-3\" id='covid-country'>\r\n            <h2>Covid-19 in {region}</h2>\r\n            <div className='container mt-3'>\r\n                <div className='row'>\r\n                    {\r\n                        province.map((province, i) => {\r\n                            return (\r\n                                <div className='col-12 col-sm-6 col-md-4 mt-2' key={i + province}>\r\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{province.provinceState}</h5>\r\n                                            <h6 className=\"card-subtitle mb-2 text-left\"><i className=\"fas fa-head-side-cough mr-1\"></i>Active: {province.active}</h6>\r\n                                            <h6 className=\"card-subtitle mb-2 text-left\"><i className=\"fas fa-clipboard-list mr-1\"></i> Confirmed: {province.confirmed}</h6>\r\n                                            <h6 className=\"card-subtitle mb-2 text-left\"><i className=\"fas fa-cross mr-1\"></i> Deaths: {province.deaths}</h6>\r\n                                            <h6 className=\"card-subtitle mb-2 text-left\"><i className=\"fas fa-calendar-alt mr-1\"></i> Cases last 28 days: {province.cases28Days}</h6>\r\n                                            <h6 className=\"card-subtitle mb-2 text-left\"><i className=\"fas fa-calendar-times mr-1\"></i> Deaths last 28 days: {province.deaths28Days}</h6>\r\n                                            <h6 className=\"card-subtitle mb-2 text-left\"><i className=\"fas fa-chart-line mr-1\"></i> Incident rate: {parseFloat(province.incidentRate).toFixed(2)}</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <div className=\"container\" style={{ height: \"80vh\" }}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\" style={{ marginTop: \"35vh\" }}>\r\n                    <small>Error 404 - Page not found</small>\r\n                    <h2>Sorry, the page you are looking does not exist 😥</h2>\r\n                    <p>You can go back to the <Link to=\"/covid-data-webapp\"> <u>index</u> </Link> and continue browsing </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './assets/css/App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport Navbar from './components/navbar/Navbar';\nimport Footer from './components/footer/Footer';\nimport MainContentRegion from './components/mainContent/MainContentRegion';\nimport BottomContent from './components/bottomContent/BottomContent';\nimport Error404 from './components/error404/Error404';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n\n      <Routes>\n        <Route path=\"/covid-data-webapp\" exact element={<Home />} />\n        <Route path=\"/covid-data-webapp/:region/region\" element={<MainContentRegion />} />\n        <Route path=\"/covid-data-webapp/daily-summary-all-regions\" element={<BottomContent />} />\n        <Route path=\"*\" element={<Error404 />} />\n      </Routes>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}